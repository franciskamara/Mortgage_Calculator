@page "/counter"
@using Mortgage_Calculator
<PageTitle>Mortgage Calculator</PageTitle>

<h1>Mortgage Calculator</h1>
<nav>
    <div class="topnav">
        <a class="active" @onclick="() => calcOption = 1">Calculate mortgage</a>&nbsp
        <a class="active" @onclick="() => calcOption = 2">Calculate and compare mortgages</a>
    </div>
    <br />
</nav>
@if (calcOption == 1)
{
    <p>Single mortgage</p>

    <form>
        <label>Loan amount: </label>
        <InputNumber @bind-Value="userInput.Amount"></InputNumber>
        <br /><br />
        <label>How many years for the loan? </label>
        <InputNumber @bind-Value="userInput.Term"></InputNumber>
        <br /><br />

        <MortgageTypeSelect @selection="mTypeSelect"></MortgageTypeSelect>

        <br /><br />
        <label>Interest rate: %</label>
        <InputNumber @bind-Value="userInput.InterestRatePercentage"></InputNumber>
        <br /><br />
        <label>Deposit (optional):</label>
        <InputNumber @bind-Value="userInput.Deposit"></InputNumber>
        <br /><br />

        <button class="btn btn-primary" @onclick="DisplayResults">Results</button>
    </form>

    @if (resultSet != null)
    {
        <p>Total Amount:  @resultSet.TotalAmount</p>
        <p>Total months: @resultSet.MonthlyRepayments.Count</p>
        <p>Monthly payments</p>
        <ul>
            @foreach (PaymentItem item in resultSet.PaymentItems)
            {
                <li>@item.Year - @item.RemainingAmount</li>
            }
        </ul>
        <p>Warning Indicator: @resultSet.WarningIndicator</p>

    }
}

@if (calcOption == 2)
{
    <p>Compare mortgages</p>

    <form>
        <h5>First mortgage</h5>
        <label>Loan amount: </label>
        <InputNumber @bind-Value="userInput.Amount"></InputNumber>
        <br /><br />
        <label>How many years for the loan? </label>
        <InputNumber @bind-Value="userInput.Term"></InputNumber>
        <br /><br />

        <MortgageTypeSelect @selection="mTypeSelect"></MortgageTypeSelect>

        <br /><br />
        <label>Interest rate: %</label>
        <InputNumber @bind-Value="userInput.InterestRatePercentage"></InputNumber>
        <br /><br />
        <label>Deposit (optional):</label>
        <InputNumber @bind-Value="userInput.Deposit"></InputNumber>
        <br /><br />

        <h5>Second mortgage</h5>

        <label>Loan amount: </label>
        <InputNumber @bind-Value="userInputCompare.Amount"></InputNumber>
        <br /><br />
        <label>How many years for the loan? </label>

        <MortgageTypeSelect @selection="mTypeSelectCompare"></MortgageTypeSelect>

        <br /><br />
        <label>Interest rate: %</label>
        <InputNumber @bind-Value="userInputCompare.InterestRatePercentage"></InputNumber>
        <br /><br />
        <label>Deposit (optional):</label>
        <InputNumber @bind-Value="userInputCompare.Deposit"></InputNumber>
        <br /><br />

        <button class="btn btn-primary" @onclick="DisplayResults">Results</button>
    </form>
}


@code {

    private UserInput userInput = new();
    private UserInput userInputCompare = new();
    private MortgageType mTypeSelect = MortgageType.Standard;
    private MortgageType mTypeSelectCompare = MortgageType.Standard;
    private int calcOption = 0;
    private Results resultSet = new();
    private Results resultSetCompare = new();
    private Graph graph = new();

    private void DisplayResults()
    {


        if (calcOption == 1)
        {
            //do calc 1
            resultSet = LogicMethod.CalculateRepayments(userInput, mTypeSelect);
        }
        else
        {
            //do calc 2
            resultSet = LogicMethod.CalculateRepayments(userInput, mTypeSelect);
            resultSetCompare = LogicMethod.CalculateRepayments(userInputCompare, mTypeSelectCompare);
        }
        //currentCount++;
    }
}

